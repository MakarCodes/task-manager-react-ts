{"version":3,"sources":["reducers/actionTypes.tsx","reducers/TaskListReducer.tsx","context/TaskListContex.tsx","components/Task/Task.styles.ts","components/Task/Task.tsx","components/TaskList/TaskList.styles.ts","components/TaskList/TaskList.tsx","components/TaskForm/TaskForm.styles.ts","components/TaskForm/TaskForm.tsx","components/Header/Header.style.ts","components/Header/Header.tsx","App.styles.ts","App.tsx","index.tsx"],"names":["ActionTypes","TaskListReducer","state","action","type","ADD_TASK","title","payload","id","uuidv4","REMOVE_TASK","filter","task","CLEAR_TASK_LIST","EDIT_LIST","map","TaskListContext","createContext","undefined","TaskListContextProvider","children","initialData","JSON","parse","localStorage","getItem","useReducer","tasks","dispatch","useState","editItem","setEditItem","useEffect","setItem","stringify","Provider","value","findItem","item","find","Error","ListItem","styled","li","TaskTitle","DeleteButton","button","EditButton","Task","useContext","onClick","className","List","ul","Message","div","TaskList","Fragment","length","key","Form","form","TaskInput","input","ButtonsContainer","AddButton","props","edit","ClearButton","TaskForm","setTitle","onSubmit","e","preventDefault","placeholder","onChange","target","required","HeaderWrapper","Title","h1","Header","AppContainer","AppWrapper","Main","App","TaskListContex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5836872f.chunk.js","sourcesContent":["export enum ActionTypes {\r\n  ADD_TASK = 'ADD_TASK',\r\n  REMOVE_TASK = 'REMOVE_TASK',\r\n  CLEAR_TASK_LIST = 'CLEAR_TASK_LIST',\r\n  EDIT_LIST = 'EDIT_LIST',\r\n}\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { ActionTypes } from './actionTypes';\r\n\r\nexport const TaskListReducer = (state: State, action: Actions) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_TASK:\r\n      return [...state, { title: action.payload.title, id: uuidv4() }];\r\n    case ActionTypes.REMOVE_TASK:\r\n      return state.filter((task: ITask) => task.id !== action.payload.id);\r\n    case ActionTypes.CLEAR_TASK_LIST:\r\n      return [];\r\n    case ActionTypes.EDIT_LIST:\r\n      const newTasks: State = state.map((task: ITask) => {\r\n        return task.id === action.payload.id\r\n          ? { title: action.payload.title, id: action.payload.id }\r\n          : task;\r\n      });\r\n      return newTasks;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useState, useEffect, useReducer } from 'react';\r\nimport { TaskListReducer } from '../reducers/TaskListReducer';\r\n\r\ninterface TaskListContextType {\r\n  tasks: State;\r\n  dispatch: (value: Actions) => void;\r\n  findItem: (id: string) => void;\r\n  setEditItem: (item: ITask | undefined) => void;\r\n  editItem: ITask | undefined;\r\n}\r\ntype Props = {\r\n  children: JSX.Element;\r\n};\r\n\r\nexport const TaskListContext = createContext<TaskListContextType>(undefined!);\r\n\r\nconst TaskListContextProvider: React.FC<Props> = ({ children }) => {\r\n  const initialData: State = JSON.parse(localStorage.getItem('tasks') || '[]');\r\n  const [tasks, dispatch] = useReducer(TaskListReducer, initialData);\r\n  const [editItem, setEditItem] = useState<ITask>();\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const findItem = (id: string): void => {\r\n    const item: ITask | undefined = tasks.find((task: ITask) => task.id === id);\r\n    if (item === undefined) {\r\n      throw new Error('No task results for this _id!');\r\n    }\r\n    setEditItem(item);\r\n  };\r\n\r\n  return (\r\n    <TaskListContext.Provider\r\n      value={{\r\n        tasks,\r\n        dispatch,\r\n        findItem,\r\n        setEditItem,\r\n        editItem,\r\n      }}\r\n    >\r\n      {children}\r\n    </TaskListContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TaskListContextProvider;\r\n","import styled from 'styled-components';\r\n\r\nexport const ListItem = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 20px 0;\r\n  /* padding-bottom: 5px; */\r\n`;\r\n\r\nexport const TaskTitle = styled.li`\r\n  color: #999;\r\n`;\r\n\r\nexport const DeleteButton = styled.button`\r\n  cursor: pointer;\r\n  background-color: transparent;\r\n  border: none;\r\n  outline: none;\r\n  i {\r\n    font-size: 16px;\r\n    color: #bbb;\r\n    margin-right: 20px;\r\n  }\r\n`;\r\n\r\nexport const EditButton = styled.button`\r\n  cursor: pointer;\r\n  background-color: transparent;\r\n  border: none;\r\n  outline: none;\r\n  i {\r\n    font-size: 16px;\r\n    color: #bbb;\r\n    margin-right: 20px;\r\n  }\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport { TaskListContext } from '../../context/TaskListContex';\r\nimport { ActionTypes } from '../../reducers/actionTypes';\r\nimport { ListItem, TaskTitle, DeleteButton, EditButton } from './Task.styles';\r\n\r\ninterface ITaskProps {\r\n  task: ITask;\r\n}\r\n\r\nconst Task: React.FC<ITaskProps> = ({ task }) => {\r\n  const { dispatch, findItem } = useContext(TaskListContext);\r\n  const a = true;\r\n  return (\r\n    <ListItem>\r\n      <TaskTitle>{task.title}</TaskTitle>\r\n      <div>\r\n        <DeleteButton\r\n          onClick={() => {\r\n            return dispatch({\r\n              type: ActionTypes.REMOVE_TASK,\r\n              payload: {\r\n                id: task.id,\r\n              },\r\n            });\r\n          }}\r\n        >\r\n          <i className='fas fa-trash-alt'></i>\r\n        </DeleteButton>\r\n        <EditButton\r\n          onClick={() => {\r\n            return findItem(task.id);\r\n          }}\r\n        >\r\n          <i className='fas fa-pen'></i>\r\n        </EditButton>\r\n      </div>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n  width: 90%;\r\n  margin: auto;\r\n  max-height: 300px;\r\n  overflow: hidden;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const Message = styled.div`\r\n  color: #777;\r\n  text-align: center;\r\n  font-size: 18px;\r\n  margin-top: 20px;\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport { TaskListContext } from '../../context/TaskListContex';\r\nimport Task from '../Task/Task';\r\nimport { List, Message } from './TaskList.styles';\r\n\r\nconst TaskList: React.FC = () => {\r\n  const { tasks } = useContext(TaskListContext);\r\n  return (\r\n    <React.Fragment>\r\n      {tasks.length ? (\r\n        <List>\r\n          {tasks.map(task => {\r\n            return <Task task={task} key={task.id} />;\r\n          })}\r\n        </List>\r\n      ) : (\r\n        <Message>No tasks to do...</Message>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import styled from 'styled-components';\r\n\r\ninterface Props {\r\n  edit: boolean;\r\n}\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const TaskInput = styled.input`\r\n  width: 350px;\r\n  min-width: 250px;\r\n  padding: 15px 10px 10px 20px;\r\n  margin-right: 10px;\r\n  font-family: 'Josefin Sans', serif;\r\n  font-size: 15px;\r\n  color: #ccc;\r\n  background-color: #1d222b;\r\n  border: 1px solid #444;\r\n  outline: none;\r\n  border-radius: 20px;\r\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const AddButton = styled.button<Props>`\r\n  margin: 10px;\r\n  min-width: 100px;\r\n  background-color: ${props => (props.edit ? '#e6a612' : '#10a350')};\r\n  color: #ccc;\r\n  border: none;\r\n  font-family: 'Montserrat', sans-serif;\r\n  font-size: 14px;\r\n  border-radius: 20px;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);\r\n  outline: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const ClearButton = styled.button`\r\n  margin: 10px;\r\n  width: 100px;\r\n  height: 35px;\r\n  background-color: #9c1a11;\r\n  color: #ccc;\r\n  border: none;\r\n  font-family: 'Montserrat', sans-serif;\r\n  font-size: 14px;\r\n  border-radius: 20px;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);\r\n  outline: none;\r\n  cursor: pointer;\r\n`;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { TaskListContext } from '../../context/TaskListContex';\r\nimport { ActionTypes } from '../../reducers/actionTypes';\r\nimport {\r\n  Form,\r\n  TaskInput,\r\n  ButtonsContainer,\r\n  AddButton,\r\n  ClearButton,\r\n} from './TaskForm.styles';\r\n\r\nconst TaskForm: React.FC = () => {\r\n  const { dispatch, editItem, setEditItem } = useContext(TaskListContext);\r\n  const [title, setTitle] = useState<string>('');\r\n\r\n  const handleSubmit = (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    if (editItem) {\r\n      dispatch({\r\n        type: ActionTypes.EDIT_LIST,\r\n        payload: {\r\n          title,\r\n          id: editItem.id,\r\n        },\r\n      });\r\n      setEditItem(undefined);\r\n    } else {\r\n      dispatch({\r\n        type: ActionTypes.ADD_TASK,\r\n        payload: {\r\n          title,\r\n        },\r\n      });\r\n      setTitle('');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editItem) {\r\n      setTitle(editItem.title);\r\n    } else {\r\n      setTitle('');\r\n    }\r\n  }, [editItem]);\r\n\r\n  let edit = editItem ? true : false;\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <TaskInput\r\n        type='text'\r\n        placeholder='Add task...'\r\n        value={title}\r\n        onChange={e => setTitle(e.target.value)}\r\n        required\r\n      />\r\n      <ButtonsContainer>\r\n        <AddButton edit={edit} type='submit'>\r\n          {editItem ? 'Edit task' : 'Add task'}\r\n        </AddButton>\r\n        <ClearButton\r\n          onClick={() => {\r\n            return dispatch({ type: ActionTypes.CLEAR_TASK_LIST });\r\n          }}\r\n        >\r\n          Clear\r\n        </ClearButton>\r\n      </ButtonsContainer>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const HeaderWrapper = styled.div`\r\n  text-align: center;\r\n  margin: 2rem;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  color: #ccc;\r\n  font-weight: 300;\r\n  text-align: center;\r\n  margin: 50px 20px 60px 20px;\r\n  font-family: 'Josefin Slab', serif;\r\n`;\r\n","import * as React from 'react';\r\nimport { HeaderWrapper, Title } from './Header.style';\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <HeaderWrapper>\r\n      <Title>Task Manager</Title>\r\n    </HeaderWrapper>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\n\r\nexport const AppContainer = styled.div`\r\n  background-image: linear-gradient(\r\n    120deg,\r\n    rgb(250, 195, 72),\r\n    rgb(250, 180, 26)\r\n  );\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const AppWrapper = styled.div`\r\n  background-color: #292f38;\r\n  width: 25%;\r\n  min-width: 450px;\r\n  height: 600px;\r\n  padding: 30px;\r\n  box-sizing: border-box;\r\n  border-radius: 5px;\r\n  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.4);\r\n`;\r\n\r\nexport const Main = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: space-between;\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n","import React from 'react';\r\nimport TaskListContextProvider from './context/TaskListContex';\r\nimport TaskList from './components/TaskList/TaskList';\r\nimport TaskForm from './components/TaskForm/TaskForm';\r\nimport Header from './components/Header/Header';\r\nimport { AppContainer, AppWrapper, Main } from './App.styles';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <TaskListContextProvider>\r\n      <AppContainer>\r\n        <AppWrapper>\r\n          <Header />\r\n          <Main>\r\n            <TaskForm />\r\n            <TaskList />\r\n          </Main>\r\n        </AppWrapper>\r\n      </AppContainer>\r\n    </TaskListContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}